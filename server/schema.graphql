### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Language {
  id: ID!
  languageName: String!
}

type Mutation {
  """
  Adds new language
  """
  addLanguage(languageName: String!, projectId: String!): Language!

  """
  Adds new project
  """
  addProject(projectName: String!): Project!

  """
  Adds new translation
  """
  addTranslation(languageId: String!, translationkeyId: String!, translationValue: String!): Translation!

  """
  Adds new translationkey
  """
  addTranslationkey(projectId: String!, translationKeyName: String!): Translationkey!

  """
  Attempts to log user in
  """
  login(
    """
    Email address
    """
    email: String!

    """
    Password
    """
    password: String!
  ): Viewer!

  """
  Logs out signed-in user if any
  """
  logout: Boolean!

  """
  Registers new user
  """
  register(
    """
    Email address
    """
    email: String!

    """
    Full name
    """
    name: String!

    """
    Password
    """
    password: String!
  ): Viewer!

  """
  Deletes excisting language
  """
  removeLanguage(id: String!): Boolean!

  """
  Deletes excisting project
  """
  removeProject(id: String!): Boolean!

  """
  Deletes excisting translationkey
  """
  removeTranslationKey(id: String!): Boolean!

  """
  Updates excisting Language
  """
  updateLanguage(id: String!, languageName: String!): Boolean!

  """
  Updates excisting project
  """
  updateProject(id: String!, projectName: String!): Boolean!

  """
  Updates excisting translation
  """
  updateTranslation(id: String!, translationValue: String!): Boolean!

  """
  Updates excisting project
  """
  updateTranslationkey(id: String!, translationkeyName: String!): Boolean!
}

type Project {
  id: ID!
  projectName: String!
  translations: [Translation!]!
}

type Query {
  """
  Queries all languages
  """
  languages(projectId: String!): [Language!]!

  """
  Queries all projects
  """
  projects: [Project!]!

  """
  Queries all translations
  """
  projectTranslations(projectId: String!): [Translation!]!

  """
  Queries all translationkeys
  """
  translationkeys(projectId: String!): [Translationkey!]!

  """
  Queries all translations
  """
  translations(languageId: String!, translationkeyId: String!): [Translation!]!

  """
  Server version
  """
  version: String!

  """
  Logged in user
  """
  viewer: Viewer
}

type Tag {
  id: ID!
  tagName: String!
}

type Translation {
  id: ID!
  languageId: ID!
  translationkeyId: ID!
  translationValue: String!
}

type Translationkey {
  id: ID!
  translationkeyName: String!
}

type User implements UserInterface {
  """
  User email address
  """
  email: String!

  """
  User unique id
  """
  id: ID!

  """
  User name
  """
  name: String!
}

interface UserInterface {
  """
  User email address
  """
  email: String!

  """
  User unique id
  """
  id: ID!

  """
  User name
  """
  name: String!
}

type Viewer implements UserInterface {
  """
  User email address
  """
  email: String!

  """
  User unique id
  """
  id: ID!

  """
  User name
  """
  name: String!
}
